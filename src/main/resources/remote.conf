client-system {
  loggers = ["akka.event.slf4j.Slf4jLogger"]

  loglevel = "DEBUG"

  stdout-loglevel = "DEBUG"

  akka {
    actor {
      provider = "akka.remote.RemoteActorRefProvider"
    }
    akka.actor.deployment {
      /parent/remotePool {
        router = round-robin-pool
        nr-of-instances = 10
        target.nodes = [
          "akka.tcp://ServerSystem@127.0.01:2552"]
      }
    }

    remote {
      enabled-transports = ["akka.remote.netty.tcp"]
      netty.tcp {
        hostname = "127.0.0.1"
        port = 2553
      }
    }
  }
}

ServerSystem {
  loggers = ["akka.event.slf4j.Slf4jLogger"]

  loglevel = "DEBUG"

  stdout-loglevel = "DEBUG"

  akka {
    actor {
      provider = "akka.remote.RemoteActorRefProvider"
      serializers {
        java = "akka.serialization.JavaSerializer" #本地调用的默认方式
        proto = "akka.remote.serialization.ProtobufSerializer" #远程调用的默认方式
        cust = "com.xiaomi.be.remote.CustomizeSerializer"
      }
      serialization-bindings {
        "java.lang.String" = java
        "akka.docs.serialization.Customer" = java
        "com.google.protobuf.Message" = proto
        "java.lang.Boolean" = cust
      }
    }

    remote {
      enabled-transports = ["akka.remote.netty.tcp"]
      netty.tcp {
        hostname = "127.0.0.1"
        port = 2552
      }
    }
  }
}
